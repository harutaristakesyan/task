plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'org.graalvm.buildtools.native' version '0.9.18'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com'
version = '0.0.1'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2/' }
    maven { url 'https://packages.confluent.io/maven/' }
}

ext {
    set('openApiVersion', "2.1.0")
    set('postgresVersion', "42.6.0")
    set('apachCommonVersion', "1.10.0")
    set('springCloudVersion', "2022.0.3")
    set('mapStructVersion', "1.5.5.Final")
    set('springBootAdminVersion', "3.1.1")
}

dependencies {
    /* Spring */
    implementation "org.springframework.kafka:spring-kafka"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-web"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"

    /* Database */
    runtimeOnly "com.h2database:h2"
    implementation "org.flywaydb:flyway-core"
    implementation "org.postgresql:postgresql:${postgresVersion}"

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    implementation 'io.confluent:kafka-json-serializer:7.3.1'
    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    implementation "de.codecentric:spring-boot-admin-starter-client"
    implementation "org.apache.commons:commons-csv:${apachCommonVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiVersion}"
}

//avro {
//    fieldVisibility = "private"
//}
dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudVersion}"
    }
}

//tasks.named('test') {
//    useJUnitPlatform()
//}
